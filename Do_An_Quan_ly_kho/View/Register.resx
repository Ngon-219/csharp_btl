<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>